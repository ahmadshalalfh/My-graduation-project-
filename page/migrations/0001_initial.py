# Generated by Django 4.2.7 on 2024-03-09 09:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='myuser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userID', models.IntegerField(primary_key=True, serialize=False)),
                ('Address', models.CharField(max_length=255)),
                ('Phone', models.CharField(max_length=20)),
                ('is_employee', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('AnnouncementsID', models.AutoField(primary_key=True, serialize=False)),
                ('Title', models.CharField(max_length=255)),
                ('Content', models.TextField()),
                ('Date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Bills',
            fields=[
                ('BillID', models.AutoField(primary_key=True, serialize=False)),
                ('Amount', models.FloatField()),
                ('DueDate', models.DateTimeField()),
                ('Status', models.BooleanField()),
                ('CitizenID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('DepartmentID', models.AutoField(primary_key=True, serialize=False)),
                ('DepartmentName', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('NewsID', models.AutoField(primary_key=True, serialize=False)),
                ('Title', models.CharField(max_length=255)),
                ('Content', models.TextField()),
                ('Date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Requests',
            fields=[
                ('RequestID', models.AutoField(primary_key=True, serialize=False)),
                ('RequestDate', models.DateTimeField()),
                ('Details', models.TextField()),
                ('ID_Photo', models.BinaryField()),
                ('Status', models.BooleanField()),
                ('CitizenID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('DepartmentID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.departments')),
            ],
        ),
        migrations.CreateModel(
            name='WaterDepartmentRequests',
            fields=[
                ('RequestID', models.AutoField(primary_key=True, serialize=False)),
                ('BuildingPermit_Photo', models.BinaryField()),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.requests')),
            ],
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('SubscriptionID', models.AutoField(primary_key=True, serialize=False)),
                ('CitizenID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('DepartmentID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.departments')),
            ],
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('PaymentID', models.AutoField(primary_key=True, serialize=False)),
                ('AmountPaid', models.FloatField()),
                ('PaymentDate', models.DateTimeField()),
                ('BillID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.bills')),
            ],
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('MessageID', models.AutoField(primary_key=True, serialize=False)),
                ('Content', models.TextField()),
                ('SendDate', models.DateTimeField()),
                ('ReadStatus', models.BooleanField()),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EngineeringDepartmentRequests',
            fields=[
                ('RequestID', models.AutoField(primary_key=True, serialize=False)),
                ('SpacePlan_Photo', models.BinaryField()),
                ('BuySellAgreement_Photo', models.BinaryField()),
                ('Ownership_Photo', models.BinaryField()),
                ('Geometricscheme_Photo', models.BinaryField()),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.requests')),
            ],
        ),
        migrations.CreateModel(
            name='ElectricityDepartmentRequests',
            fields=[
                ('RequestID', models.AutoField(primary_key=True, serialize=False)),
                ('BuildingPermit_Photo', models.BinaryField()),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.requests')),
            ],
        ),
        migrations.CreateModel(
            name='ComplaintsDepartmentRequests',
            fields=[
                ('RequestID', models.AutoField(primary_key=True, serialize=False)),
                ('Supportive_Photo', models.BinaryField()),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.requests')),
            ],
        ),
        migrations.AddField(
            model_name='bills',
            name='RequestID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.requests'),
        ),
        migrations.CreateModel(
            name='AdministrationDermentRequests',
            fields=[
                ('RequestID', models.AutoField(primary_key=True, serialize=False)),
                ('Bill_Photo', models.BinaryField()),
                ('Rent_Photo', models.BinaryField()),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.requests')),
            ],
        ),
    ]
